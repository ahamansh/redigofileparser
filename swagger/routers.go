/*
 * Simple Task API
 *
 * This is a Task API
 *
 * API version: 1.0.0
 * Contact: you@your-company.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

var handlerFunc HandlerFunctions

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	handlerFunc = InitializeHandlers() // ACL Middleware oauth
	routes := getAllRoutes()
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

func getAllRoutes() Routes {
	return Routes{
		Route{
			"Index",
			"GET",
			"/anshul2/crowdstrike/v1/",
			Index,
		},

		Route{
			"SearchFilesByIP",
			strings.ToUpper("Get"),
			"/anshul2/crowdstrike/v1/search/filesByIP",
			handlerFunc.SearchFilesByIP,
		},

		Route{
			"AddTask",
			strings.ToUpper("Post"),
			"/anshul2/crowdstrike/v1/tasks",
			handlerFunc.AddTask,
		},

		Route{
			"SearchTasks",
			strings.ToUpper("Get"),
			"/anshul2/crowdstrike/v1/tasks/{taskId}",
			handlerFunc.SearchTasks,
		},
	}
}
